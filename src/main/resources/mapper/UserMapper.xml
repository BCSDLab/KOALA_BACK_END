<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="in.koala.mapper.UserMapper">


    <insert id="insertUser">
        INSERT INTO user(created_at, updated_at, user_type) VALUES(DEFAULT, DEFAULT, #{userType});
        <selectKey keyProperty="id" resultType="Long">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <insert id="signUp" parameterType="in.koala.domain.user.NormalUser">
        INSERT INTO normal_user(user_id, nickname, account, password, find_email, profile, sns_type, is_auth)
        VALUES(#{id}, #{nickname}, #{account}, #{password}, #{findEmail}, #{profile}, #{snsType}, DEFAULT);
    </insert>

    <insert id="snsSignUp" parameterType="in.koala.domain.user.NormalUser">
        INSERT INTO normal_user(user_id, nickname, account, sns_email, profile, sns_type, is_auth)
        VALUES(#{id}, #{nickname}, #{account}, #{snsEmail}, #{profile}, #{snsType}, DEFAULT);
    </insert>

    <select id="getIdByAccount" parameterType="String" resultType="Long">
        SELECT id FROM user u INNER JOIN normal_user nu ON nu.user_id=u.id WHERE nu.account=#{account} AND u.deleted_at IS NULL;
    </select>

    <select id="getUserByFindEmail" resultType="in.koala.domain.user.NormalUser">
        SELECT
        <include refid="normalUserInfo">
            <property name="alias" value="nu."/>
        </include>,
        u.id,
        u.created_at,
        u.updated_at,
        u.user_type
        FROM normal_user nu
        INNER JOIN (SELECT * FROM user WHERE deleted_at IS NULL) AS u
        ON nu.user_id=u.id
        WHERE nu.find_email=#{email};
    </select>
    
    <select id="getUserByAccount" parameterType="String" resultType="in.koala.domain.user.NormalUser">
        SELECT
        <include refid="normalUserInfo">
            <property name="alias" value="nu."/>
        </include>,
            u.id,
            u.created_at,
            u.updated_at,
            u.user_type
        FROM normal_user nu
        INNER JOIN (SELECT * FROM user WHERE deleted_at IS NULL) AS u
        ON nu.user_id=u.id
        WHERE nu.account=#{account};
    </select>

    <select id="getUserById" parameterType="Long" resultType="in.koala.domain.user.User">
        SELECT
            <include refid="normalUserInfo">
               <property name="alias" value="nu."/>
            </include>,
            u.id,
            u.created_at,
            u.updated_at,
            u.user_type
        FROM user u
        LEFT JOIN normal_user AS nu
        ON nu.user_id=#{userId}
        LEFT JOIN non_user AS nonu
        ON nonu.id=#{userId}
        WHERE u.id=#{userId} AND u.deleted_at IS NULL;
    </select>

    <select id="getNormalUserById" resultType="in.koala.domain.user.NormalUser">
        SELECT
            <include refid="normalUserInfo">
                <property name="alias" value="nu."/>
            </include>,
            u.id,
            u.created_at,
            u.updated_at,
            u.user_type
        FROM user u
        INNER JOIN normal_user AS nu
        ON nu.user_id=u.id
        WHERE u.id=#{userId} AND u.deleted_at IS NULL;
    </select>

    <select id="getNonUserById" resultType="in.koala.domain.user.NonUser">
        SELECT
            u.id,
            u.created_at,
            u.updated_at,
            u.user_type
        FROM user u
        INNER JOIN non_user AS nu
        ON nu.id=u.id
        WHERE u.id=#{userId} AND u.deleted_at IS NULL;
    </select>

    <select id="checkNickname" parameterType="String" resultType="Integer">
        SELECT count(*) FROM normal_user WHERE nickname=#{nickname} LIMIT 1;
    </select>

    <select id="getUserPassword" parameterType="String" resultType="in.koala.domain.user.NormalUser">
        SELECT u.id, nu.password FROM normal_user nu INNER JOIN user u ON u.id=nu.user_id WHERE account=#{account} AND deleted_at IS NULL
    </select>

    <select id="getUserType" resultType="in.koala.enums.UserType">
        SELECT user_type FROM user WHERE id=#{id};
    </select>

    <update id="updateNickname" parameterType="in.koala.domain.user.NormalUser">
        UPDATE normal_user
        SET
            nickname=#{nickname}
        WHERE user_id = #{id}
    </update>

    <update id="updatePassword">
        UPDATE normal_user
        SET
            password=#{password}
        WHERE user_id=#{id}
    </update>

    <update id="updateIsAuth">
        UPDATE normal_user
        SET
            is_auth=1
        WHERE user_id=#{id}
    </update>

    <update id="softDeleteUser">
        UPDATE user
        SET
            deleted_at=CURRENT_TIMESTAMP
        WHERE id=#{id};
    </update>

    <update id="softDeleteNormalUser">
        UPDATE normal_user
        SET
            account=#{account},
            find_email=#{findEmail},
            sns_email=#{snsEmail},
            nickname=#{nickname}
        WHERE user_id=#{id};
    </update>

    <update id="updateUserProfile">
        UPDATE normal_user
        SET
            profile=#{url}
        WHERE user_id=#{id}
    </update>

    <insert id="insertNonMemberUser" parameterType="in.koala.domain.user.NonUser">
        INSERT INTO non_user(id)
        VALUES(#{id});
    </insert>



    <sql id="normalUserInfo">
        ${alias}account,
        ${alias}find_email,
        ${alias}sns_email,
        ${alias}nickname,
        ${alias}profile,
        ${alias}is_auth,
        ${alias}sns_type
    </sql>

</mapper>